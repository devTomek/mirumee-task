{"version":3,"sources":["assets/LOGO.svg","components/shared/container/Container.tsx","api/api.ts","assets/ARROW OPEN.svg","assets/ARROW CLOSE.svg","components/shared/card/Card.tsx","components/shared/collapsibleCard/CollapsibleCard.tsx","api/planet/planet.ts","assets/SPINNER.svg","components/shared/spinner/Spinner.tsx","components/movies/movie/planets/planetsTable/PlanetsTable.tsx","components/movies/movie/planets/planetsSmallScreen/PlanetsSmallScreen.tsx","components/movies/movie/planets/Planets.tsx","components/movies/movie/Movie.tsx","components/movies/Movies.tsx","api/movie/movie.ts","components/shared/divider/Divider.tsx","components/shared/input/Input.tsx","assets/SEARCH.svg","components/shared/button/Button.tsx","components/addMovie/addMovieForm/planetDropdown/magicDropdown/MagicDropdown.tsx","components/addMovie/addMovieForm/planetDropdown/PlanetsDropdown.tsx","components/shared/cancellableButton/CancellableButton.tsx","components/addMovie/addMovieForm/chosenPlanets/ChosenPlanets.tsx","components/addMovie/addMovieForm/AddMovieForm.tsx","components/addMovie/AddMovie.tsx","App.tsx","reportWebVitals.ts","translation/i18n.ts","index.tsx"],"names":["Container","children","className","get","url","a","fetch","response","json","results","console","error","Card","CollapsibleCard","onClick","isOpen","title","src","arrowClose","arrowOpen","alt","PLANETS_URL","getPlanet","id","planet","name","rotation_period","orbital_period","diameter","climate","surface_water","population","Spinner","spinner","PlanetsTable","data","columns","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","PlanetsSmallScreen","planets","t","useTranslation","Object","keys","planetKey","Planets","planetUrls","useState","setPlanets","setColumns","isLoading","setIsLoading","isSmallScreen","setIsSmallScreen","smallScreenTimeout","useRef","spinnerHeight","length","useEffect","planetPromises","urlParts","split","lastPartIndex","Promise","all","then","res","cols","Header","accessor","checkSmallScreen","isSmall","window","innerWidth","checkSmallScreenDebounced","current","clearTimeout","setTimeout","addEventListener","removeEventListener","style","height","Movie","setIsOpen","prevIsOpen","Movies","movies","setMovies","Divider","Input","onChange","value","label","placeholder","icon","errorText","htmlFor","type","Button","disabled","MagicDropdown","PlanetsDropdown","searchValue","setChosenPlanet","clearPlanetInput","searchTimeoutRef","query","getPlanets","CancellableButton","ChosenPlanets","AddMovieForm","chosenPlanets","setChosenPlanets","chosenPlanet","formik","useFormik","initialValues","movieTitle","onSubmit","values","movie","alert","JSON","stringify","resetForm","validationSchema","Yup","test","this","originalValue","slice","match","min","required","buttonDisabled","touched","errors","prevChosenPlanets","some","prevChosenPlanet","handleSubmit","autoComplete","handleChange","index","findIndex","clone","splice","search","setFieldValue","AddMovie","App","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","initReactI18next","init","fallbackLng","interpolation","escapeValue","resources","en","translation","lng","ReactDOM","StrictMode","document","getElementById"],"mappings":"uVAAe,G,YAAA,IAA0B,kCCO1BA,G,YAJO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,M,gCCFvBE,EAAG,uCAAG,WAAUC,GAAV,iBAAAC,EAAA,+EAEMC,MAAM,GAAD,OAJN,8BAIM,OAAeF,IAF1B,cAEXG,EAFW,gBAGEA,EAASC,OAHX,cAGXA,EAHW,yBAIVA,EAAKC,SAAWD,GAJN,kCAMjBE,QAAQC,MAAR,MANiB,0DAAH,sDCFD,G,MAAA,IAA0B,wCCA1B,MAA0B,wCCO1BC,G,MAJE,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,MC0BhBY,EAlBqB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOf,EAAe,EAAfA,SAC9D,OACC,sBAAKC,UAAU,mBAAf,UACC,eAAC,EAAD,WACC,sBAAMA,UAAU,QAAhB,SACC,4BAAIc,MAEL,sBAAMd,UAAU,0BAAhB,SACC,wBAAQY,QAASA,EAAjB,SACC,qBAAKG,IAAKF,EAASG,EAAaC,EAAWC,IAAI,uBAIjDL,EAAS,qBAAKb,UAAU,YAAf,SAA4BD,IAAkB,S,iBCtB9CoB,EAAc,WAMdC,EAAS,uCAAG,WAAOC,GAAP,eAAAlB,EAAA,sEACHF,EAAG,UAAakB,EAAb,YAA4BE,IAD5B,cAClBC,EADkB,yBAEjB,CACNC,MAAY,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQC,OAAQ,GACtBC,iBAAuB,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQE,kBAAmB,GAC5CC,gBAAsB,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQG,iBAAkB,GAC1CC,UAAgB,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQK,UAAW,GAC7BA,SAAe,OAANL,QAAM,IAANA,OAAA,EAAAA,EAAQK,UAAW,GAC5BC,eAAqB,OAANN,QAAM,IAANA,OAAA,EAAAA,EAAQM,gBAAiB,GACxCC,YAAkB,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQO,aAAc,KATX,2CAAH,sDCTP,G,MAAA,IAA0B,qCCY1BC,EARK,WACnB,OACC,qBAAK9B,UAAU,UAAf,SACC,qBAAKe,IAAKgB,EAASb,IAAI,e,uBCuEXc,EApEkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EAOnDC,mBAAS,CAAED,UAASD,QAAQG,aAL/BC,EAFsD,EAEtDA,cACAC,EAHsD,EAGtDA,kBACAC,EAJsD,EAItDA,aACAC,EALsD,EAKtDA,KACAC,EANsD,EAMtDA,WAID,OACC,qBAAKzC,UAAU,gBAAf,SACC,kDAAWqC,KAAX,cACC,gCACEE,EAAaG,KAAI,SAACC,GAAD,OACjB,8CAAQA,EAAYC,uBAApB,aACED,EAAYE,QAAQH,KAAI,SAACI,GAAD,OAExB,aADA,CACA,gCAAQA,EAAOC,eAAeD,EAAOE,yBAArC,aACC,sBAAKhD,UAAU,iBAAf,UACE8C,EAAOG,OAAO,UACf,sBAAMjD,UAAU,QAAhB,SAEE8C,EAAOI,SAEPJ,EAAOK,aACN,qCACC,qBAAKnD,UAAU,WAAf,oBACA,qBAAKA,UAAU,kBAAf,uBAGD,qCACC,qBAAKA,UAAU,gBAAf,oBACA,qBAAKA,UAAU,aAAf,uBAIF,qCACC,qBAAKA,UAAU,WAAf,oBACA,qBAAKA,UAAU,aAAf,0CAUT,iDAAWsC,KAAX,aACEE,EAAKE,KAAI,SAACU,EAAKC,GAEf,OADAZ,EAAWW,GAEV,8CAAQA,EAAIE,eAAZ,aACEF,EAAIG,MAAMb,KAAI,SAACc,GACf,OACC,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKP,OAAO,8BCnCrCS,G,MAtBwB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjCC,EAAMC,cAAND,EAER,OACC,qBAAK5D,UAAU,uBAAf,SACE2D,EAAQjB,KAAI,SAACpB,GAAD,OACZ,qBAAuBtB,UAAU,cAAjC,SACE8D,OAAOC,KAAKzC,GAAQoB,KAAI,SAACsB,GAAD,OACxB,sBAAqBhE,UAAU,MAA/B,UACC,qBAAKA,UAAU,SAAf,SAAyB4D,EAAEI,KAC3B,qBAAKhE,UAAS,iBAA0B,SAAdgE,EAAuB,OAAS,IAA1D,SAEE1C,EAAO0C,OAJAA,OAFF1C,EAAOC,aCqFN0C,EAhFa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACjBC,mBAAoB,IADH,mBACxCR,EADwC,KAC/BS,EAD+B,OAEjBD,mBAA4B,IAFX,mBAExCjC,EAFwC,KAE/BmC,EAF+B,OAGbF,oBAAS,GAHI,mBAGxCG,EAHwC,KAG7BC,EAH6B,OAILJ,oBAAS,GAJJ,mBAIxCK,EAJwC,KAIzBC,EAJyB,KAKzCC,EAA8DC,iBACnE,MAEOf,EAAMC,cAAND,EACFgB,EAAgB,GAAKV,EAAWW,OAqDtC,OAnDAC,qBAAU,WACTP,GAAa,GACb,IAAMQ,EAAiBb,EAAWxB,KAAI,SAACxC,GACtC,IAAM8E,EAAW9E,EAAI+E,MAAM,KACrBC,EAAgBF,EAASH,OAAS,EAClCxD,EAAK2D,EAASE,IAAkBF,EAASE,EAAgB,GAC/D,OAAO9D,EAAUC,MAElB8D,QAAQC,IAAIL,GAAsCM,MAAK,SAACC,GACvDlB,EAAWkB,GAAO,IAClBf,GAAa,QAEZ,CAACL,IAEJY,qBAAU,WACT,IAAMxD,EAASqC,EAAQ,GACvB,GAAIrC,EAAQ,CAEX,IAAMiE,EAA0BzB,OAAOC,KAAKzC,GAAQoB,KAAI,SAACI,GAAD,MAAa,CACpE0C,OAAQ5B,EAAEd,GACV2C,SAAU3C,MAEXuB,EAAWkB,MAEV,CAAC5B,EAASC,IAEbkB,qBAAU,WACT,IAAMY,EAAmB,WACxB,IAAMC,EAAUC,OAAOC,YAAc,IACrCpB,EAAiBkB,IAGlBD,IAEA,IAAMI,EAA4B,WAC7BpB,EAAmBqB,SACtBC,aAAatB,EAAmBqB,SAEjCrB,EAAmBqB,QAAUE,WAAWP,EAAkB,MAK3D,OAFAE,OAAOM,iBAAiB,SAAUJ,GAE3B,WACNF,OAAOO,oBAAoB,SAAUL,GACjCpB,EAAmBqB,SACtBC,aAAatB,EAAmBqB,YAGhC,IAGF,qBAAK/F,UAAU,UAAf,SACEsE,EACA,qBACCtE,UAAU,kBACVoG,MAAO,CAAEC,OAAO,GAAD,OAAKzB,EAAL,OAFhB,SAIC,cAAC,EAAD,MAEEJ,EACH,cAAC,EAAD,CAAoBb,QAASA,IAE7B,cAAC,EAAD,CAAc1B,KAAM0B,EAASzB,QAASA,OCvE3BoE,EAdW,SAAC,GAA2B,IAAzBxF,EAAwB,EAAxBA,MAAOoD,EAAiB,EAAjBA,WAAiB,EACxBC,oBAAS,GADe,mBAC7CtD,EAD6C,KACrC0F,EADqC,KAOpD,OACC,cAAC,EAAD,CAAiBzF,MAAOA,EAAOF,QALjB,WACd2F,GAAU,SAACC,GAAD,OAAiBA,MAIqB3F,OAAQA,EAAxD,SACC,cAAC,EAAD,CAASqD,WAAYA,OCKTuC,EAlBI,WAAO,IAAD,EACItC,mBAAmB,IADvB,mBACjBuC,EADiB,KACTC,EADS,KASxB,OANA7B,qBAAU,WCHoB7E,EAFL,UDMZoF,MAAK,SAACqB,GACjBC,EAAUD,GAAU,SAEnB,IAGF,mCACEA,EAAOhE,KAAI,gBAAG5B,EAAH,EAAGA,MAAO6C,EAAV,EAAUA,QAAV,OACX,cAAC,EAAD,CAAmB7C,MAAOA,EAAOoD,WAAYP,GAAjC7C,SEVD8F,G,OAJK,WACnB,OAAO,qBAAK5G,UAAU,c,uBCyCR6G,G,OA/BW,SAAC,GASpB,IARNC,EAQK,EARLA,SACAC,EAOK,EAPLA,MACA1F,EAMK,EANLA,GACAE,EAKK,EALLA,KACAyF,EAIK,EAJLA,MACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,KACAC,EACK,EADLA,UAEA,OACC,sBAAKnH,UAAU,QAAf,UACEgH,EACA,uBAAOI,QAAQ,QAAQpH,UAAWmH,EAAY,MAAQ,GAAtD,SACEH,IAEC,KACJ,uBACC3F,GAAIA,EACJE,KAAMA,EACN8F,KAAK,OACLP,SAAUA,EACVC,MAAOA,EACPE,YAAaA,IAEbC,EAAO,qBAAKnG,IAAKmG,EAAMhG,IAAI,eAAkB,KAC7CiG,EAAY,qBAAKnH,UAAU,QAAf,SAAwBmH,IAAmB,UCxC5C,MAA0B,mCCmB1BG,G,OAVY,SAAC,GAA2C,IAAzCvH,EAAwC,EAAxCA,SAAUa,EAA8B,EAA9BA,QAASyG,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SACtD,OACC,sBAAMvH,UAAU,SAAhB,SACC,wBAAQuH,SAAUA,EAAU3G,QAASA,EAASyG,KAAMA,EAApD,SACEtH,QCYUyH,G,cAhBmB,SAAC,GAA0B,IAAxB7D,EAAuB,EAAvBA,QAAS/C,EAAc,EAAdA,QAC7C,OACC,qBAAKZ,UAAU,iBAAf,SACE2D,EAAQjB,KAAI,SAACpB,GAAD,OACZ,qBAECtB,UAAU,cACVY,QAAS,kBAAMA,EAAQU,IAHxB,SAKEA,EAAOC,MAJHD,EAAOC,aCmDFkG,G,OApDqB,SAAC,GAI9B,IAHNC,EAGK,EAHLA,YACAC,EAEK,EAFLA,gBACAC,EACK,EADLA,iBAEMC,EAAmBlD,mBADpB,EAEyBR,mBAAoB,IAF7C,mBAEER,EAFF,KAEWS,EAFX,OAG6BD,oBAAS,GAHtC,mBAGEG,EAHF,KAGaC,EAHb,KAKLO,qBAAU,WACT,IAAK4C,EAGJ,OAFAtD,EAAW,SACXG,GAAa,GAIVsD,EAAiB9B,SACpBC,aAAa6B,EAAiB9B,SAE/BxB,GAAa,GAQb,OAFAsD,EAAiB9B,QAAUE,YALJ,kBd5BC,WAAiB,IAAhB6B,EAAe,uDAAP,GAClC,OAAO7H,EAAG,UAAekB,EAAf,oBAAsC2G,Ic4B9CC,CAAWL,GAAarC,MAAK,SAACC,GAC7BlB,EAAWkB,GAAO,IAClBf,GAAa,QAEuC,KAE/C,WACFsD,EAAiB9B,SACpBC,aAAa6B,EAAiB9B,YAG9B,CAAC2B,IAQJ,OAAIpD,EAEF,qBAAKtE,UAAU,kBAAf,SACC,cAAC,EAAD,MAIC2D,EAAQkB,QAAU,EAAU,KAEzB,cAAC,EAAD,CAAelB,QAASA,EAAS/C,QAfjB,SAACU,GACvBqG,EAAgBrG,GAChB8C,EAAW,IACXwD,SC/BaI,G,OAXuB,SAAC,GAAiC,IAA/BjI,EAA8B,EAA9BA,SAAUa,EAAoB,EAApBA,QAASyG,EAAW,EAAXA,KAC3D,OACC,qBAAKrH,UAAU,qBAAf,SACC,yBAAQY,QAASA,EAASyG,KAAMA,EAAhC,UACEtH,EACD,sBAAMC,UAAU,QAAhB,2BCWWiI,G,OAdmB,SAAC,GAA0B,IAAxBtE,EAAuB,EAAvBA,QAAS/C,EAAc,EAAdA,QAC7C,OACC,qBAAKZ,UAAU,iBAAf,SACE2D,EAAQjB,KAAI,SAACpB,GAAD,OACZ,qBAAuBtB,UAAU,iBAAjC,SACC,cAAC,EAAD,CAAmBqH,KAAK,SAASzG,QAAS,kBAAMA,EAAQU,IAAxD,SACEA,EAAOC,QAFAD,EAAOC,aCqHN2G,EAtHU,WAAO,IACvBtE,EAAMC,cAAND,EADsB,EAEYO,mBAAoB,IAFhC,mBAEvBgE,EAFuB,KAERC,EAFQ,OAGUjE,qBAHV,mBAGvBkE,EAHuB,KAGTV,EAHS,KAIxBW,EAASC,YAAU,CACxBC,cAAe,CACdC,WAAY,GACZnH,OAAQ,IAEToH,SAAU,SAACC,GACV,IAAMC,EAAgB,CACrB9H,MAAO6H,EAAOF,WACd9E,QAASwE,EAAczF,KAAI,qBAAExC,KAAgB,OAE9C2I,MAAMC,KAAKC,UAAUH,EAAO,KAAM,IAClCR,EAAiB,IACjBE,EAAOU,aAERC,iBAAkBC,IAAW,CAC5BT,WAAYS,MACVC,KACA,oBAFU,UAGPvF,EAAE,8BAHK,MAIV,WAAa,IAAD,EAEX,SAAQ,UAACwF,KAAKC,qBAAN,aAAC,EAAoBC,MAAM,EAAG,GAAGC,MAAM,aAGhDC,IAAI,EATM,UASA5F,EAAE,0BATF,MAUV6F,SAAS7F,EAAE,iBAGT8F,KACFpB,EAAOqB,QAAQlB,aAAcH,EAAOsB,OAAOnB,gBAC3CH,EAAOqB,QAAQrI,SAAUgH,EAAOsB,OAAOtI,QAE3CwD,qBAAU,WACJuD,GAELD,GAAiB,SAACyB,GAIjB,OAAKA,EAAkBC,MAHA,SAACC,GACvB,OAAOA,EAAiBxI,OAAS8G,EAAa9G,QAKvCsI,EAFD,GAAN,mBAAWA,GAAX,CAA8BxB,SAK9B,CAACA,IAiBJ,OACC,qBAAKrI,UAAU,iBAAf,SACC,uBAAM0I,SAAUJ,EAAO0B,aAAcC,aAAa,MAAlD,UACC,qBAAKjK,UAAU,gBAAf,SACC,cAAC,EAAD,CACCqB,GAAG,aACHE,KAAK,aACLuF,SAAUwB,EAAO4B,aACjBnD,MAAOuB,EAAOK,OAAOF,WACrBxB,YAAarD,EAAE,mBACfoD,MAAOpD,EAAE,cACTuD,UACCmB,EAAOqB,QAAQlB,YAAcH,EAAOsB,OAAOnB,WACxCH,EAAOsB,OAAOnB,WACd,OAILN,EAActD,OAAS,EACvB,cAAC,EAAD,CAAelB,QAASwE,EAAevH,QA9BtB,SAACU,GACrB8G,GAAiB,SAACyB,GACjB,IAAMM,EAAQN,EAAkBO,WAC/B,SAACL,GAAD,OAAsBA,EAAiBxI,OAASD,EAAOC,QAElD8I,EAAK,YAAOR,GAElB,OADAQ,EAAMC,OAAOH,EAAO,GACbE,QAwBF,KACJ,sBAAKrK,UAAU,6BAAf,UACC,cAAC,EAAD,CACCqB,GAAG,SACHE,KAAK,SACLuF,SAAUwB,EAAO4B,aACjBnD,MAAOuB,EAAOK,OAAOrH,OACrB2F,YAAarD,EAAE,gBACfoD,MAAOpD,EAAE,aACTsD,KAAMqD,EACNpD,UACCmB,EAAOqB,QAAQrI,QAAU6G,EAActD,QAAU,EAC9CjB,EAAE,YACF,KAGL,cAAC,EAAD,CACC8D,YAAaY,EAAOK,OAAOrH,OAC3BqG,gBAAiBA,EACjBC,iBAtDoB,WACxBU,EAAOkC,cAAc,SAAU,UAwD7B,qBAAKxK,UAAU,iBAAf,SACC,cAAC,EAAD,CAAQuH,SAAUmC,EAAgBrC,KAAK,SAAvC,SACEzD,EAAE,sBCzGM6G,EAbM,WAAO,IAAD,EACEtG,oBAAS,GADX,mBACnBtD,EADmB,KACX0F,EADW,KAElB3C,EAAMC,cAAND,EAIR,OACC,cAAC,EAAD,CAAiB/C,OAAQA,EAAQD,QAHnB,kBAAM2F,GAAU,SAACC,GAAD,OAAiBA,MAGG1F,MAAO8C,EAAE,YAA3D,SACC,cAAC,EAAD,OCcY8G,EAlBC,WAAO,IACd9G,EAAMC,cAAND,EAER,OACC,qBAAK5D,UAAU,MAAf,SACC,eAAC,EAAD,WACC,qBAAKe,IAAK4J,EAAMzJ,IAAI,OAAOlB,UAAU,SACrC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,SAAf,SACC,4BAAI4D,EAAE,uBCNIgH,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCFdO,IAAKC,IAAIC,KAAkBC,KAAK,CAC/BC,YAJiB,KAKjBC,cAAe,CACdC,aAAa,GAEdC,UAAW,CACVC,GAAI,CACHC,YAAaD,IAGfE,IAbiB,OAgBHV,EAAf,ECZAW,IAAS9I,OACR,cAAC,IAAM+I,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBtB,K","file":"static/js/main.0969572a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LOGO.f12a06d3.svg\";","import React, { FC } from \"react\";\nimport \"./Container.scss\";\n\nconst Container: FC = ({ children }) => {\n\treturn <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","export const BASE_URL = \"https://swapi.py4e.com/api\";\n\nexport const get = async <T>(url: string): Promise<T | undefined> => {\n\ttry {\n\t\tconst response = await fetch(`${BASE_URL}${url}`);\n\t\tconst json = await response.json();\n\t\treturn json.results || json;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n","export default __webpack_public_path__ + \"static/media/ARROW OPEN.89547e76.svg\";","export default __webpack_public_path__ + \"static/media/ARROW CLOSE.45c5a01b.svg\";","import React, { FC } from \"react\";\nimport \"./Card.scss\";\n\nconst Card: FC = ({ children }) => {\n\treturn <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n","import React, { FC } from \"react\";\nimport \"./CollapsibleCard.scss\";\nimport arrowOpen from \"../../../assets/ARROW OPEN.svg\";\nimport arrowClose from \"../../../assets/ARROW CLOSE.svg\";\nimport Card from \"../card/Card\";\n\ninterface IProps {\n\tonClick: () => void;\n\tisOpen: boolean;\n\ttitle: string;\n}\n\nconst CollapsibleCard: FC<IProps> = ({ onClick, isOpen, title, children }) => {\n\treturn (\n\t\t<div className=\"collapsible-card\">\n\t\t\t<Card>\n\t\t\t\t<span className=\"title\">\n\t\t\t\t\t<p>{title}</p>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"collapsible-card-button\">\n\t\t\t\t\t<button onClick={onClick}>\n\t\t\t\t\t\t<img src={isOpen ? arrowClose : arrowOpen} alt=\"arrowButton\" />\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t</Card>\n\t\t\t{isOpen ? <div className=\"card open\">{children}</div> : null}\n\t\t</div>\n\t);\n};\n\nexport default CollapsibleCard;\n","import { get } from \"../api\";\nimport { IPlanet } from \"./types\";\n\nexport const PLANETS_URL = \"/planets\";\n\nexport const getPlanets = (query = \"\") => {\n\treturn get<IPlanet[]>(`${PLANETS_URL}/?search=${query}`);\n};\n\nexport const getPlanet = async (id: string): Promise<IPlanet> => {\n\tconst planet = await get<IPlanet>(`${PLANETS_URL}/${id}`);\n\treturn {\n\t\tname: planet?.name || \"\",\n\t\trotation_period: planet?.rotation_period || \"\",\n\t\torbital_period: planet?.orbital_period || \"\",\n\t\tdiameter: planet?.climate || \"\",\n\t\tclimate: planet?.climate || \"\",\n\t\tsurface_water: planet?.surface_water || \"\",\n\t\tpopulation: planet?.population || \"\",\n\t};\n};\n","export default __webpack_public_path__ + \"static/media/SPINNER.21f44199.svg\";","import React, { FC } from \"react\";\nimport \"./Spinner.scss\";\nimport spinner from \"../../../assets/SPINNER.svg\";\n\nconst Spinner: FC = () => {\n\treturn (\n\t\t<div className=\"spinner\">\n\t\t\t<img src={spinner} alt=\"spinner\" />\n\t\t</div>\n\t);\n};\n\nexport default Spinner;\n","import React, { FC } from \"react\";\nimport \"./PlanetsTable.scss\";\nimport { Column, useSortBy, useTable } from \"react-table\";\nimport { IPlanet } from \"../../../../../api/planet/types\";\n\ninterface IProps {\n\tdata: IPlanet[];\n\tcolumns: Column<IPlanet>[];\n}\n\nconst PlanetsTable: FC<IProps> = ({ data, columns }) => {\n\tconst {\n\t\tgetTableProps,\n\t\tgetTableBodyProps,\n\t\theaderGroups,\n\t\trows,\n\t\tprepareRow,\n\t} = useTable({ columns, data }, useSortBy);\n\n\t//▼ ▲\n\treturn (\n\t\t<div className=\"planets-table\">\n\t\t\t<table {...getTableProps()}>\n\t\t\t\t<thead>\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\n\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t<th {...column.getHeaderProps(column.getSortByToggleProps())}>\n\t\t\t\t\t\t\t\t\t<div className=\"header-content\">\n\t\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\n\t\t\t\t\t\t\t\t\t\t<span className=\"arrow\">\n\t\t\t\t\t\t\t\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t\t\t\t\t\t\t\t{column.isSorted ? (\n\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.isSortedDesc ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow-up\">▲</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow-down teal\">▼</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow-up teal\">▲</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow-down\">▼</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow-up\">▲</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow-down\">▼</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</thead>\n\t\t\t\t<tbody {...getTableBodyProps()}>\n\t\t\t\t\t{rows.map((row, i) => {\n\t\t\t\t\t\tprepareRow(row);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default PlanetsTable;\n","import React, { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IPlanet } from \"../../../../../api/planet/types\";\nimport \"./PlanetsSmallScreen.scss\";\n\ninterface IProps {\n\tplanets: IPlanet[];\n}\n\nconst PlanetsSmallScreen: FC<IProps> = ({ planets }) => {\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"planets-small-screen\">\n\t\t\t{planets.map((planet) => (\n\t\t\t\t<div key={planet.name} className=\"planet-card\">\n\t\t\t\t\t{Object.keys(planet).map((planetKey) => (\n\t\t\t\t\t\t<div key={planetKey} className=\"row\">\n\t\t\t\t\t\t\t<div className=\"column\">{t(planetKey)}</div>\n\t\t\t\t\t\t\t<div className={`column ${planetKey === \"name\" ? \"teal\" : \"\"}`}>\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t\t\t\t\t{planet[planetKey]}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default PlanetsSmallScreen;\n","import React, {\n\tFC,\n\tMutableRefObject,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport \"./Planets.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { Column } from \"react-table\";\nimport { getPlanet } from \"../../../../api/planet/planet\";\nimport { IPlanet } from \"../../../../api/planet/types\";\nimport Spinner from \"../../../shared/spinner/Spinner\";\nimport PlanetsTable from \"./planetsTable/PlanetsTable\";\nimport PlanetsSmallScreen from \"./planetsSmallScreen/PlanetsSmallScreen\";\n\ninterface IProps {\n\tplanetUrls: string[];\n}\n\nconst Planets: FC<IProps> = ({ planetUrls }) => {\n\tconst [planets, setPlanets] = useState<IPlanet[]>([]);\n\tconst [columns, setColumns] = useState<Column<IPlanet>[]>([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isSmallScreen, setIsSmallScreen] = useState(false);\n\tconst smallScreenTimeout: MutableRefObject<NodeJS.Timeout | null> = useRef(\n\t\tnull\n\t);\n\tconst { t } = useTranslation();\n\tconst spinnerHeight = 50 * planetUrls.length;\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tconst planetPromises = planetUrls.map((url) => {\n\t\t\tconst urlParts = url.split(\"/\");\n\t\t\tconst lastPartIndex = urlParts.length - 1;\n\t\t\tconst id = urlParts[lastPartIndex] || urlParts[lastPartIndex - 1];\n\t\t\treturn getPlanet(id);\n\t\t});\n\t\tPromise.all(planetPromises as Promise<IPlanet>[]).then((res) => {\n\t\t\tsetPlanets(res || []);\n\t\t\tsetIsLoading(false);\n\t\t});\n\t}, [planetUrls]);\n\n\tuseEffect(() => {\n\t\tconst planet = planets[0];\n\t\tif (planet) {\n\t\t\t// @ts-ignore\n\t\t\tconst cols: Column<IPlanet>[] = Object.keys(planet).map((column) => ({\n\t\t\t\tHeader: t(column),\n\t\t\t\taccessor: column,\n\t\t\t}));\n\t\t\tsetColumns(cols);\n\t\t}\n\t}, [planets, t]);\n\n\tuseEffect(() => {\n\t\tconst checkSmallScreen = () => {\n\t\t\tconst isSmall = window.innerWidth <= 900;\n\t\t\tsetIsSmallScreen(isSmall);\n\t\t};\n\n\t\tcheckSmallScreen();\n\n\t\tconst checkSmallScreenDebounced = () => {\n\t\t\tif (smallScreenTimeout.current) {\n\t\t\t\tclearTimeout(smallScreenTimeout.current);\n\t\t\t}\n\t\t\tsmallScreenTimeout.current = setTimeout(checkSmallScreen, 500);\n\t\t};\n\n\t\twindow.addEventListener(\"resize\", checkSmallScreenDebounced);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", checkSmallScreenDebounced);\n\t\t\tif (smallScreenTimeout.current) {\n\t\t\t\tclearTimeout(smallScreenTimeout.current);\n\t\t\t}\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className=\"planets\">\n\t\t\t{isLoading ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"spinner-wrapper\"\n\t\t\t\t\tstyle={{ height: `${spinnerHeight}px` }}\n\t\t\t\t>\n\t\t\t\t\t<Spinner />\n\t\t\t\t</div>\n\t\t\t) : isSmallScreen ? (\n\t\t\t\t<PlanetsSmallScreen planets={planets} />\n\t\t\t) : (\n\t\t\t\t<PlanetsTable data={planets} columns={columns} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Planets;\n","import React, { FC, useState } from \"react\";\nimport CollapsibleCard from \"../../shared/collapsibleCard/CollapsibleCard\";\nimport Planets from \"./planets/Planets\";\n\ninterface IProps {\n\ttitle: string;\n\tplanetUrls: string[];\n}\n\nconst Movie: FC<IProps> = ({ title, planetUrls }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst toggle = () => {\n\t\tsetIsOpen((prevIsOpen) => !prevIsOpen);\n\t};\n\n\treturn (\n\t\t<CollapsibleCard title={title} onClick={toggle} isOpen={isOpen}>\n\t\t\t<Planets planetUrls={planetUrls} />\n\t\t</CollapsibleCard>\n\t);\n};\n\nexport default Movie;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { getMovies } from \"../../api/movie/movie\";\nimport { IMovie } from \"../../api/movie/types\";\nimport Movie from \"./movie/Movie\";\n\nconst Movies: FC = () => {\n\tconst [movies, setMovies] = useState<IMovie[]>([]);\n\n\tuseEffect(() => {\n\t\tgetMovies().then((movies) => {\n\t\t\tsetMovies(movies || []);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{movies.map(({ title, planets }) => (\n\t\t\t\t<Movie key={title} title={title} planetUrls={planets} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default Movies;\n","import { get } from \"../api\";\nimport { IMovie } from \"./types\";\n\nexport const MOVIES_URL = \"/films\";\n\nexport const getMovies = () => get<IMovie[]>(MOVIES_URL);\n","import { FC } from \"react\";\nimport \"./Divider.scss\";\n\nconst Divider: FC = () => {\n\treturn <div className=\"divider\"></div>;\n};\n\nexport default Divider;\n","import React, { ChangeEvent, FC } from \"react\";\nimport \"./Input.scss\";\n\ninterface IProps {\n\tonChange: (e: ChangeEvent) => void;\n\tvalue: string;\n\tid?: string;\n\tname?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ticon?: string;\n\terrorText?: string;\n}\n\nconst Input: FC<IProps> = ({\n\tonChange,\n\tvalue,\n\tid,\n\tname,\n\tlabel,\n\tplaceholder,\n\ticon,\n\terrorText,\n}) => {\n\treturn (\n\t\t<div className=\"input\">\n\t\t\t{label ? (\n\t\t\t\t<label htmlFor=\"input\" className={errorText ? \"red\" : \"\"}>\n\t\t\t\t\t{label}\n\t\t\t\t</label>\n\t\t\t) : null}\n\t\t\t<input\n\t\t\t\tid={id}\n\t\t\t\tname={name}\n\t\t\t\ttype=\"text\"\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={value}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t/>\n\t\t\t{icon ? <img src={icon} alt=\"input-icon\" /> : null}\n\t\t\t{errorText ? <div className=\"error\">{errorText}</div> : null}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/SEARCH.469848d2.svg\";","import React, { FC } from \"react\";\nimport \"./Button.scss\";\n\ninterface IProps {\n\tonClick?: () => void;\n\ttype?: \"button\" | \"submit\" | \"reset\";\n\tdisabled?: boolean;\n}\n\nconst Button: FC<IProps> = ({ children, onClick, type, disabled }) => {\n\treturn (\n\t\t<span className=\"button\">\n\t\t\t<button disabled={disabled} onClick={onClick} type={type}>\n\t\t\t\t{children}\n\t\t\t</button>\n\t\t</span>\n\t);\n};\n\nexport default Button;\n","import React, { FC } from \"react\";\nimport { IPlanet } from \"../../../../../api/planet/types\";\nimport \"./MagicDropdown.scss\";\n\ninterface IProps {\n\tplanets: IPlanet[];\n\tonClick: (planet: IPlanet) => void;\n}\n\nconst MagicDropdown: FC<IProps> = ({ planets, onClick }) => {\n\treturn (\n\t\t<div className=\"magic-dropdown\">\n\t\t\t{planets.map((planet) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={planet.name}\n\t\t\t\t\tclassName=\"planet-name\"\n\t\t\t\t\tonClick={() => onClick(planet)}\n\t\t\t\t>\n\t\t\t\t\t{planet.name}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default MagicDropdown;\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { getPlanets } from \"../../../../api/planet/planet\";\nimport { IPlanet } from \"../../../../api/planet/types\";\nimport Spinner from \"../../../shared/spinner/Spinner\";\nimport MagicDropdown from \"./magicDropdown/MagicDropdown\";\nimport \"./PlanetsDropdown.scss\";\n\ninterface IProps {\n\tsearchValue: string;\n\tsetChosenPlanet: (prevChosenPlanet: IPlanet) => void;\n\tclearPlanetInput: () => void;\n}\n\nconst PlanetsDropdown: FC<IProps> = ({\n\tsearchValue,\n\tsetChosenPlanet,\n\tclearPlanetInput,\n}) => {\n\tconst searchTimeoutRef = useRef<NodeJS.Timeout>();\n\tconst [planets, setPlanets] = useState<IPlanet[]>([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (!searchValue) {\n\t\t\tsetPlanets([]);\n\t\t\tsetIsLoading(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (searchTimeoutRef.current) {\n\t\t\tclearTimeout(searchTimeoutRef.current);\n\t\t}\n\t\tsetIsLoading(true);\n\t\tconst getPlanetsData = () =>\n\t\t\tgetPlanets(searchValue).then((res) => {\n\t\t\t\tsetPlanets(res || []);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t\tsearchTimeoutRef.current = setTimeout(getPlanetsData, 500);\n\n\t\treturn () => {\n\t\t\tif (searchTimeoutRef.current) {\n\t\t\t\tclearTimeout(searchTimeoutRef.current);\n\t\t\t}\n\t\t};\n\t}, [searchValue]);\n\n\tconst onPlanetSelect = (planet: IPlanet) => {\n\t\tsetChosenPlanet(planet);\n\t\tsetPlanets([]);\n\t\tclearPlanetInput();\n\t};\n\n\tif (isLoading)\n\t\treturn (\n\t\t\t<div className=\"spinner-wrapper\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t);\n\n\tif (planets.length <= 0) return null;\n\n\treturn <MagicDropdown planets={planets} onClick={onPlanetSelect} />;\n};\n\nexport default PlanetsDropdown;\n","import React, { FC } from \"react\";\nimport \"./CancellableButton.scss\";\n\ninterface IProps {\n\tonClick: () => void;\n\ttype?: \"button\" | \"submit\" | \"reset\";\n}\n\nconst CancellableButton: FC<IProps> = ({ children, onClick, type }) => {\n\treturn (\n\t\t<div className=\"cancellable-button\">\n\t\t\t<button onClick={onClick} type={type}>\n\t\t\t\t{children}\n\t\t\t\t<span className=\"cross\">&#x2715;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default CancellableButton;\n","import React, { FC } from \"react\";\nimport { IPlanet } from \"../../../../api/planet/types\";\nimport CancellableButton from \"../../../shared/cancellableButton/CancellableButton\";\nimport \"./ChosenPlanets.scss\";\n\ninterface IProps {\n\tplanets: IPlanet[];\n\tonClick: (planet: IPlanet) => void;\n}\n\nconst ChosenPlanets: FC<IProps> = ({ planets, onClick }) => {\n\treturn (\n\t\t<div className=\"chosen-planets\">\n\t\t\t{planets.map((planet) => (\n\t\t\t\t<div key={planet.name} className=\"button-wrapper\">\n\t\t\t\t\t<CancellableButton type=\"button\" onClick={() => onClick(planet)}>\n\t\t\t\t\t\t{planet.name}\n\t\t\t\t\t</CancellableButton>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default ChosenPlanets;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"../../shared/input/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport search from \"../../../assets/SEARCH.svg\";\nimport Button from \"../../shared/button/Button\";\nimport \"./AddMovieForm.scss\";\nimport PlanetsDropdown from \"./planetDropdown/PlanetsDropdown\";\nimport ChosenPlanets from \"./chosenPlanets/ChosenPlanets\";\nimport { IMovie } from \"../../../api/movie/types\";\nimport { IPlanet } from \"../../../api/planet/types\";\n\nconst AddMovieForm: FC = () => {\n\tconst { t } = useTranslation();\n\tconst [chosenPlanets, setChosenPlanets] = useState<IPlanet[]>([]);\n\tconst [chosenPlanet, setChosenPlanet] = useState<IPlanet>();\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tmovieTitle: \"\",\n\t\t\tplanet: \"\",\n\t\t},\n\t\tonSubmit: (values) => {\n\t\t\tconst movie: IMovie = {\n\t\t\t\ttitle: values.movieTitle,\n\t\t\t\tplanets: chosenPlanets.map(({url}) => url || \"\"),\n\t\t\t};\n\t\t\talert(JSON.stringify(movie, null, 2));\n\t\t\tsetChosenPlanets([]);\n\t\t\tformik.resetForm();\n\t\t},\n\t\tvalidationSchema: Yup.object({\n\t\t\tmovieTitle: Yup.string()\n\t\t\t\t.test(\n\t\t\t\t\t\"is-capital-letter\",\n\t\t\t\t\t`${t(\"mustStartWithCapitalLetter\")}.`,\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\treturn !!this.originalValue?.slice(0, 1).match(/[A-Z]/);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.min(3, `${t(\"atLeastThreeCharacters\")}.`)\n\t\t\t\t.required(t(\"required\")),\n\t\t}),\n\t});\n\tconst buttonDisabled =\n\t\t!!(formik.touched.movieTitle && formik.errors.movieTitle) ||\n\t\t!!(formik.touched.planet && formik.errors.planet);\n\n\tuseEffect(() => {\n\t\tif (!chosenPlanet) return;\n\n\t\tsetChosenPlanets((prevChosenPlanets) => {\n\t\t\tconst isAlreadyThere = (prevChosenPlanet: IPlanet) => {\n\t\t\t\treturn prevChosenPlanet.name === chosenPlanet.name;\n\t\t\t};\n\t\t\tif (!prevChosenPlanets.some(isAlreadyThere)) {\n\t\t\t\treturn [...prevChosenPlanets, chosenPlanet];\n\t\t\t} else {\n\t\t\t\treturn prevChosenPlanets;\n\t\t\t}\n\t\t});\n\t}, [chosenPlanet]);\n\n\tconst clearPlanetInput = () => {\n\t\tformik.setFieldValue(\"planet\", \"\");\n\t};\n\n\tconst removePlanet = (planet: IPlanet) => {\n\t\tsetChosenPlanets((prevChosenPlanets) => {\n\t\t\tconst index = prevChosenPlanets.findIndex(\n\t\t\t\t(prevChosenPlanet) => prevChosenPlanet.name === planet.name\n\t\t\t);\n\t\t\tconst clone = [...prevChosenPlanets];\n\t\t\tclone.splice(index, 1);\n\t\t\treturn clone;\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"add-movie-form\">\n\t\t\t<form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n\t\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"movieTitle\"\n\t\t\t\t\t\tname=\"movieTitle\"\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.movieTitle}\n\t\t\t\t\t\tplaceholder={t(\"enterMovieTitle\")}\n\t\t\t\t\t\tlabel={t(\"movieTitle\")}\n\t\t\t\t\t\terrorText={\n\t\t\t\t\t\t\tformik.touched.movieTitle && formik.errors.movieTitle\n\t\t\t\t\t\t\t\t? formik.errors.movieTitle\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{chosenPlanets.length > 0 ? (\n\t\t\t\t\t<ChosenPlanets planets={chosenPlanets} onClick={removePlanet} />\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"input-wrapper planet-input\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"planet\"\n\t\t\t\t\t\tname=\"planet\"\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\tvalue={formik.values.planet}\n\t\t\t\t\t\tplaceholder={t(\"searchPlanet\")}\n\t\t\t\t\t\tlabel={t(\"addPlanet\")}\n\t\t\t\t\t\ticon={search}\n\t\t\t\t\t\terrorText={\n\t\t\t\t\t\t\tformik.touched.planet && chosenPlanets.length <= 0\n\t\t\t\t\t\t\t\t? t(\"required\")\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<PlanetsDropdown\n\t\t\t\t\t\tsearchValue={formik.values.planet}\n\t\t\t\t\t\tsetChosenPlanet={setChosenPlanet}\n\t\t\t\t\t\tclearPlanetInput={clearPlanetInput}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-wrapper\">\n\t\t\t\t\t<Button disabled={buttonDisabled} type=\"submit\">\n\t\t\t\t\t\t{t(\"addMovie\")}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default AddMovieForm;\n","import React, { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CollapsibleCard from \"../shared/collapsibleCard/CollapsibleCard\";\nimport AddMovieForm from \"./addMovieForm/AddMovieForm\";\n\nconst AddMovie: FC = () => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { t } = useTranslation();\n\n\tconst toggle = () => setIsOpen((prevIsOpen) => !prevIsOpen);\n\n\treturn (\n\t\t<CollapsibleCard isOpen={isOpen} onClick={toggle} title={t(\"addMovie\")}>\n\t\t\t<AddMovieForm />\n\t\t</CollapsibleCard>\n\t);\n};\n\nexport default AddMovie;\n","import React, { FC } from \"react\";\nimport logo from \"./assets/LOGO.svg\";\nimport \"./App.scss\";\nimport Container from \"./components/shared/container/Container\";\nimport Movies from \"./components/movies/Movies\";\nimport Divider from \"./components/shared/divider/Divider\";\nimport AddMovie from \"./components/addMovie/AddMovie\";\nimport { useTranslation } from \"react-i18next\";\n\nconst App: FC = () => {\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Container>\n\t\t\t\t<img src={logo} alt=\"logo\" className=\"logo\" />\n\t\t\t\t<Movies />\n\t\t\t\t<Divider />\n\t\t\t\t<AddMovie />\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<p>{t(\"copyright\")}</p>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./en.json\";\n\nexport const EN = \"en\";\nexport const DEFAULT_LANGUAGE = EN;\n\ni18n.use(initReactI18next).init({\n\tfallbackLng: EN,\n\tinterpolation: {\n\t\tescapeValue: false,\n\t},\n\tresources: {\n\t\ten: {\n\t\t\ttranslation: en,\n\t\t},\n\t},\n\tlng: DEFAULT_LANGUAGE,\n});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./translation/i18n\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}